name: Terraform Deploy (GitHub-hosted Runner)
on:
 push:
    branches:
     - gitwork
  
jobs:
 terraform:
  name: Terraform-Deploy
  runs-on: ubuntu-latest

#   defaults:
#       run:
#         working-directory: terraform-projects 

  env: 
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
  steps:
    - name: checkout-code
      uses: actions/checkout@v4

    # - name: find dir
    #   shell: bash
    #   run: |
    #      git fetch origin main
    #      git diff --name-only origin/main HEAD | grep '^namespaces/' | xargs -n1 dirname | sort -u

    #       if [[ -z "$changed_dirs" ]]; then
    #         echo "No namespaces changed."
    #       else
    #         printf "Changed namespace directories:\n%s\n" "$changed_dirs"
    #         echo "dirs=$matrix" >> $GITHUB_OUTPUT
    #       fi

    - name: Find changed namespace dirs
      id: find_dirs
      shell: bash
      run: |
        # 1. Fetch remote main
        git fetch origin main

        # 2. Get changed files under namespaces/, or empty
        changed_files=$(git diff --name-only origin/main HEAD \
          | grep '^namespaces/' || true)

        # 3. Bail if none
        if [[ -z "$changed_files" ]]; then
          echo "No namespaces changed."
          echo "dirs=[]" >> $GITHUB_OUTPUT
          exit 0
        fi

        # 4. Compute unique directory names
        changed_dirs=$(printf "%s\n" "$changed_files" \
          | xargs -n1 dirname \
          | sort -u \
          | jq -R . | jq -s .)

        # 5. Print and export JSON array for matrix use
        echo "Changed namespace directories:"
        printf "%s\n" "$changed_dirs" | jq -C .
        echo "dirs=$changed_dirs" >> $GITHUB_OUTPUT
