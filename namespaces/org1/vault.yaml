- name: Find changed namespace dirs
  id: find_dirs
  shell: bash
  run: |
    git fetch origin main

    # Only look for changed .tfvars files under namespaces/
    changed_files=$(git diff --name-only origin/main...HEAD | grep '^namespaces/.*/.*\.tfvars$' || true)

    if [[ -z "$changed_files" ]]; then
      echo "No tfvars file changes detected."
      echo "dirs=[]" >> $GITHUB_OUTPUT
      exit 0
    fi

    # Extract unique namespace names
    changed_dirs=$(echo "$changed_files" | cut -d/ -f2 | sort -u | jq -R . | jq -s -c .)

    echo "Changed namespace directories: $changed_dirs"
    echo "dirs=$changed_dirs" >> $GITHUB_OUTPUT





 - name: Save successful namespaces
        if: ${{ success() }}
        run: echo "${{ matrix.namespace }}" >> passed_namespaces.txt

      - name: Upload passed namespaces
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: passed-namespaces
          path: passed_namespaces.txt






            terraform-apply:
    needs: terraform-plan
    runs-on: ubuntu-latest

    steps:
      - name: Download passed namespaces
        uses: actions/download-artifact@v4
        with:
          name: passed-namespaces

      - name: Set matrix from passed namespaces
        id: set-matrix
        run: |
          echo "Loading namespaces from artifact:"
          cat passed_namespaces.txt
          ns=$(cat passed_namespaces.txt | jq -R . | jq -s .)
          echo "matrix=$ns" >> $GITHUB_OUTPUT

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}





  terraform-apply-matrix:
    needs: terraform-apply
    strategy:
      matrix:
        namespace: ${{ fromJson(needs.terraform-apply.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:
      - name: Do Terraform Apply for ${{ matrix.namespace }}
        run: |
          cd namespaces/${{ matrix.namespace }}
          terraform apply -auto-approve --var-file=...
